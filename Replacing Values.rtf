{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red27\green27\blue27;\red255\green255\blue255;\red27\green27\blue27;
}
{\*\expandedcolortbl;;\cssrgb\c14118\c14118\c14118;\cssrgb\c100000\c100000\c100000;\cssrgb\c14118\c14118\c14118;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww19580\viewh8720\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ********************NO NULL VALUES***********************************\
\
import sklearn\
from sklearn.preprocessing import LabelEncoder\
le=LabelEncoder()\
\
#Select feature which are object type\
\
df[df.select_dtypes(include=['object']).columns]\
\
#change object type feature into 1 2 3 etc\
\
df[df.select_dtypes(include=['object']).columns]=df[df.select_dtypes(include=['object']).columns].apply(le.fit_transform)\
\
**************************************************************************\
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 \outl0\strokewidth0 **********************One BY ONE**********************************************************\cf2 \cb3 \outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 Data and df both are different representations of a particular dataset. Take into account about them and then use the commands.\
\
\
from sklearn.preprocessing import LabelEncoder\
l3 = LabelEncoder()\
\
label = l3.fit_transform(df['workclass\'92])    # \cf4 \cb3 \outl0\strokewidth0 ['workclass\'92] represents the column to be transformed\cf2 \cb3 \outl0\strokewidth0 \strokec2 \
Data = df.drop("workclass", axis ='columns')   #\cf4 \cb3 \outl0\strokewidth0  axis ='columns'   it can also be \cf4 axis =\'910\'92/ axis =\'911\'92\cf2 \cb3 \outl0\strokewidth0 \strokec2 \
Data["workclass"] = label\
Data.head(2)\
\
\
}